/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-21 00:10:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.song;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import spmem.VO.spmemVO;
import song.VO.songVO;
import java.util.List;

public final class findurmuse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/Users/Haka4700/SpringWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpinUrOwn/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1595550836000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("song.VO.songVO");
    _jspx_imports_classes.add("spmem.VO.spmemVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script>\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n");
List<songVO> ver = (List<songVO>)request.getAttribute("llcand"); 
      out.write('\n');
 int k = 0;
	for(songVO ve : ver){
      out.write('\n');
      out.write('	');
ve.setRowrow(k++);
      out.write('\n');
      out.write('	');
}
      out.write('\n');
session.setAttribute("ver", ver);
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var count=0;\n");
      out.write("function process1(){\n");
      out.write("\talert(count)\n");
      out.write("\tconst $result = $('#view11');\n");
      out.write("\t$.ajax({\n");
      out.write("\t\turl:\"/SpinUrOwn/listenmuse.ma\",\n");
      out.write("\t\ttype:\"GET\",\n");
      out.write("\t\tdata: {\n");
      out.write("\t\t\tcount : count\n");
      out.write("\t\t},\n");
      out.write("\t\tsuccess : function(data) {\n");
      out.write("\t\t\tconsole.log(data);\n");
      out.write("\t\t\t$result.html(data);\n");
      out.write("\t\t}\n");
      out.write("\t});//ajax end\n");
      out.write("\tcount++;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
spmemVO vo = (spmemVO)session.getAttribute("vo");
      out.write("<br/>\n");
      out.write("<a href = \"/SpinUrOwn/backtomain.ma\">back to main</a><br/>\n");
      out.write("\t");
for(songVO ve : ver){
      out.write('\n');
      out.write('	');
      out.print(ve.getURLLINK());
      out.write('\n');
      out.write('	');
      out.print(ve.getDisAtmos());
      out.write('\n');
      out.write('	');
      out.print(ve.getDisgenre());
      out.write('\n');
      out.write('	');
      out.print(ve.getRowrow());
      out.write("\n");
      out.write("\t<br><hr>\n");
      out.write("\t");
}
      out.write("\n");
      out.write("<form name=\"fom\" method=\"get\">\n");
      out.write("\t");
int number = 0;
      out.write('\n');
      out.write('	');
String URLrightnow = ver.get(number).getURLLINK();
      out.write('\n');
      out.write('	');
if(number>ver.size()){
		
      out.write("there's no more muse, why don't you register another song?\n");
      out.write("\t");
 }
      out.write("\n");
      out.write("<div id=\"view11\"></div>\n");
      out.write("<input type=\"hidden\" value=\"");
      out.print(URLrightnow);
      out.write("\" id=\"URLLINK\" name=\"URLLINK\"/>\n");
      out.write("<input type=\"hidden\" value=\"");
      out.print(ver.get(number).getDisAtmos());
      out.write("\" id=\"DisAtmos\" name=\"DisAtmos\"/>\n");
      out.write("<input type=\"hidden\" value=\"");
      out.print(ver.get(number).getDisgenre());
      out.write("\" id=\"Disgenre\" name=\"Disgenre\"/>\n");
      out.write("<input type=\"button\" value=\"show muse\" id=\"ok\" \n");
      out.write("onclick=\"process1()\"/>\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

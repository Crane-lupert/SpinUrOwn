/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-23 06:41:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import spmem.VO.spmemVO;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("spmem.VO.spmemVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
spmemVO vo = (spmemVO)session.getAttribute("vo"); 
      out.write("<br/>\n");
      out.write("닉네임 : ");
      out.print(vo.getNickname() );
      out.write("<br/>\n");
      out.write("이메일 : ");
      out.print(vo.getEmail() );
      out.write("<br/>\n");
      out.write("장르 : ");
      out.print(vo.getPrefergenre() );
      out.write("<br/>\n");
      out.write("분위기1 : ");
      out.print(vo.getPreferAtmos() );
      out.write("<br/>\n");
      out.write("분위기2 : ");
      out.print(vo.getPreferAtmos2() );
      out.write("<br/>\n");
      out.write("분위기3 : ");
      out.print(vo.getPreferAtmos3() );
      out.write("<br/>\n");
      out.write("포인트 : ");
      out.print(vo.getPoint());
      out.write("<br/>\n");
      out.write("\n");
      out.write("<h1>여기는 메인화면 이에양</h1>\n");
      out.write("\n");
      out.write("\n");
      out.write("계정 통으로 : ");
      out.print(session.getAttribute("vo"));
      out.write("<br/>\n");
      out.write("\t<a href='/SpinUrOwn/logout.ma'>logout</a><br>\n");
if(vo.getPrefergenre().trim().equals("0")){
	
      out.write("<a href='/SpinUrOwn/genreUpdate.ma'>register my prefergenre</a><br/>\n");
}else if(vo.getPreferAtmos().trim().equals("0")){
      out.write("\n");
      out.write("\t<a href='/SpinUrOwn/AtmosUpdate.ma'>register/add/update my preferAtmosphere</a><br/>\n");
      out.write("\t");
}else{
      out.write("\n");
      out.write("\t<a href='/SpinUrOwn/genreUpdate.ma'>modify my prefergenre</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/AtmosUpdate.ma'>add/update my preferAtmosphere</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/AtmosUpdate2.ma'>add/update my preferAtmosphere(2)</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/AtmosUpdate3.ma'>add/update my preferAtmosphere(3)</a><br/>\n");
      out.write("\t<form action=\"/SpinUrOwn/discovermuse.ma\" method=\"post\">\n");
      out.write("\tfind my muse(done...?)\n");
      out.write("\t\t<select name=\"Atmosphere\">\n");
      out.write("\t\t\t<option value=\"1\">1</option>\n");
      out.write("\t\t\t");
if(!vo.getPreferAtmos2().toString().trim().equals("0")){ 
      out.write("\n");
      out.write("\t\t\t<option value=\"2\">2</option>\n");
      out.write("\t\t\t");
}
			if(!vo.getPreferAtmos3().toString().trim().equals("0")){
      out.write("\n");
      out.write("\t\t\t<option value=\"3\">3</option>\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("\t\t</select>\n");
      out.write("\t\t<input name=\"genreaccept\" type=\"range\" min=\"50\" max=\"500\" maxlength=\"500\">\n");
      out.write("\t\t<input type=\"submit\" value=\"submit\">\n");
      out.write("\t</form>\n");
      out.write("\t<a href='/SpinUrOwn/ASLUpdate.ma'>register/Assess songs</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/delaccount.ma'>delete account</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/rtowrite.ma'>Recommand song to other</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/rtoread.ma'>check Recommandation from other(done)</a><br/>\n");
      out.write("\t");
} 
      out.write('\n');
      out.write('\n');
if(vo.getNickname().trim().equals("admin")){
      out.write("\n");
      out.write("\t<a href='/SpinUrOwn/showASLall.ma'>show ASL all</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/showLLall.ma'>show LL all(done)</a><br/>\n");
      out.write("\t<a href='/SpinUrOwn/showRTOall.ma'>show RTO all</a><br/>\n");
} 
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
